<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2015 Hippo B.V. (http://www.onehippo.com)

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<sv:node sv:name="UpdatePluginConfig" xmlns:sv="http://www.jcp.org/jcr/sv/1.0">
  <sv:property sv:name="jcr:primaryType" sv:type="Name">
    <sv:value>hipposys:updaterinfo</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:batchsize" sv:type="Long">
    <sv:value>100</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:description" sv:type="String">
    <sv:value>Updates frontend:pluginconfig nodes and converts some comma separated string properties to multi value string properties.</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:dryrun" sv:type="Boolean">
    <sv:value>true</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:parameters" sv:type="String">
    <sv:value>{ "names" : [ "nodetypes", "linkpicker.nodetypes", "imagepicker.nodetypes", "included.image.variants", "excluded.image.variants", "last.visited.nodetypes" ] }</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:query" sv:type="String">
    <sv:value>//element(cluster.options,frontend:pluginconfig)</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:script" sv:type="String">
    <sv:value>package org.hippoecm.frontend.plugins.cms.admin.updater
import org.onehippo.repository.update.BaseNodeUpdateVisitor

import javax.jcr.Node
import javax.jcr.PropertyType
import javax.jcr.Session

class UpdaterTemplate extends BaseNodeUpdateVisitor {

  def names = []

  void initialize(Session session) {
    names = parametersMap.get("names", [])
  }

  boolean doUpdate(Node node) {
    log.debug "Checking node ${node.path}"

    def updated = false
    for (name in names) {
      if (node.hasProperty(name)) {
        updated |= updateProperty(node, name)
      }
    }

    return updated
  }

  boolean updateProperty(Node node, String name) {
    def property = node.getProperty(name)
    if (property.type != PropertyType.STRING) {
      log.debug "Wrong type of property ${name}, expected String"
      return false
    }
    if (property.multiple) {
      return false
    }

    def value = property.string
    property.remove()
    def values = [] as String[]
    if (value != null) {
      values = value.split(",").collect({it.trim()}) as String[]
    }
    node.setProperty(name, values)
    log.debug "Converted property ${name} from ${value} to ${values}"

    return true
  }

  boolean undoUpdate(Node node) {
    throw new UnsupportedOperationException('Updater does not implement undoUpdate method')
  }

}</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:throttle" sv:type="Long">
    <sv:value>1000</sv:value>
  </sv:property>
</sv:node>
